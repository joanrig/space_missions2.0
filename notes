Notes

SpaceMissions CLI gem
space agencies = artists (JPL, NASA Goddard)
mission = songs
planets = genres


targets have many missions
missions can have multiple targets





__________________________________________________________________
INTERFACE

user types space-missions - that starts program

Welcome to Space Missions!

automatically load  a list of NASA JPL current space missions
pick  mission
type number
get full description


    extras
- done - type in mars return all missions that target mars
type in mission.targets to get all targets for a mission
etc.

__________________________________________________________________


TO DO
fix formatting of dates ie "Launch Date: June 20, 200812,46 a.m. PDT (07,46 UTC)"

[21] pry(SpaceMissions::Scraper)> attributes[2].css("p").children[1].text
=> "\n\t\t\t\t\t\t\t\t\t  September 05, 1977"
[22] pry(SpaceMissions::Scraper)> attributes[2].css("p").children[1].text.strip
=> "September 05, 1977"
[23] pry(SpaceMissions::Scraper)> attributes[2].css("p").children[2].text.strip

=> ""
[24] pry(SpaceMissions::Scraper)> attributes[2].css("p").children[3].text.strip
=> "8:56 a.m. EDT (12:56 UTC)"

-- removed targets instead, as class was not useful for this app/ get Mission.set_targets working
*fix CLI so after missions are listed, you have the choice of other commands besides picking a mission number or exiting.


____________________________________________________________

possible future features:
search missions by launch, landing date or type

add to user_says

#elsif input == "type"
#  SpaceMissions::Mission.type
# elsif input == "launch"
#   SpaceMissions::Mission.launch
# elsif input == "end"
#   SpaceMissions::Mission.end

add to mission class:
#futre featues
# def self.find_by_launch_date(input)
#   missions = @@all.select {|mission| mission.launch_date.split.last == input}
# end
#
# def self.find_by_end_date(input)
#   missions = @@all.select {|mission| (mission.end_date || mission.mission.end.date).split.last == input}
#end

establish separate classes for Type
